{"title":"Aula 1 Mini curso R","markdown":{"yaml":{"title":"Aula 1 Mini curso R","author":" CONSTAT - Consultoria Estatítica","date":"2024-12-03","format":{"revealjs":{"transition":"slide","theme":"simple","css":"styles.css","background-image":"images/template.png","slide_number":true,"code_block_background":false}},"fontsize":"25px","editor":"visual"},"headingText":"Apresentação da CONSTAT e curso R","containsRefs":false,"markdown":"\n\n\n## CONSTAT\n\nSomos a Empresa Júnior do Curso de Graduação em Estatística da UFES, que tem como finalidade proporcionar a seus membros as condições necessárias para a aplicação prática de\n\nconhecimentos teóricos relativos ao curso de Estatística e a toda área de formação, promover uma vivência empresarial e desenvolver as habilidades empreendedoras dos estudantes, sob a missão de transformar dados em resultados.\n\n-   Contato: constatufes\\@gmail.com\n\n## Serviços prestados\n\n-   Engenharia de dados;\n\n-   Modelo de regressão preditivo;\n\n-   Censos de qualquer natureza;\n\n-   Pesquisa de mercado;\n\n-   Limpeza de dados;\n\n-   Análise descritiva;\n\n-   Planejamento amostral;\n\n-   Análise de regressão.\n\n------------------------------------------------------------------------\n\n## Curso R\n\n### Estrutura das aulas\n\n1.  Teoria;\n\n2.  Exercícios;\n\n3.  Dúvidas lista/ aula anterior.\n\n### Trabalho e certificado\n\nO certificado será liberado após a entrega do trabalho.\n\n**Trabalho**\n\nO trabalho consiste em entregar uma análise de um banco de dados usando os ítens aprendidos em aula.\n\n# Introdução ao R e ao RStudio\n\n-   **R**: Linguagem de programação focada em análise estatística e ciência de dados, além de um ambiente de software gratuito.\n\n-   Saiba mais em: [r-project.org](https://www.r-project.org/about.html)\n\n-   **RStudio**: Ambiente de desenvolvimento integrado (IDE) para R.\n\n-   O R, em combinação com o RStudio, possui um conjunto de funcionalidades cuja intenção é ajudar no processo de desenvolvimento\n\n-   **Recursos**: Scripts, pacotes, visualizações, Interface amigável para programadores e estatísticos.\n\n-   Saiba mais em: <https://rstudio.com/>\n\n------------------------------------------------------------------------\n\n## Utilização do RStudio\n\n-   Criação análises;\n\n-   Rmarkdown: Relatórios em PDF, HTML, Word;\n\n-   Quarto: Apresentações em PDF, HTML;\n\n-   Shiny: dashboard;\n\n-   Outros.\n\n## R\n\n![](images/Captura%20de%20tela%202024-12-03%20143747.png){fig-align=\"center\"}\n\n## RStudio\n\n![](images/Captura%20de%20tela%202024-12-03%20143909.png){fig-align=\"center\"}\n\n## Telas\n\n-   **Editor/Scripts**: É onde escrever os códigos. Arquivos do tipo .R.\n\n-   **Console**: Executar os comandos e ver os resultados.\n\n-   **Enviroment**: Painel com todos os objetos criados.\n\n-   **History**: História dos comandos executados.\n\n-   **Files**: Navegar em pastas e arquivos.\n\n-   **Plots**: Onde os gráficos serão apresentados.\n\n-   **Packages**: Pacotes instalados (sem ticar) e habilitados (ticados).\n\n-   **Help**: Retorna o tutorial de ajuda do comando solicitado com help() ou ?comando. Veremos melhor como pedir ajuda no R ainda nessa aula.\n\n## Back-end VS Front-end\n\n**Front-end** é a parte que os usuários veem e interagem, **back-end** é a parte que faz o programa funcionar\n\n```{r, echo=FALSE, out.width=\"45%\", fig.align='default'}\nlibrary(knitr)\ninclude_graphics(c(\"front_end.png\", \"back_end.png\"))\n```\n\n# Boas práticas\n\n-   Comente bem o seu código: É possível fazer comentários usando o símbolo ‘#’. É sempre bom explicar o que uma variável armazena, o que uma função faz, porque alguns parâmetros são passados para uma determinada função, qual é o objetivo de um trecho de código, etc.\n\n-   Evite linhas de código muito longas: Usar linhas de código mais curtas ajuda na leitura do código.\n\n-   Escreva um código organizado: Por exemplo, adote um padrão no uso de minúsculas e maiúsculas, uma lógica única na organização de pastas e arquivos, pode ser adotada uma breve descrição (como comentário) indicando o que um determinado script faz.\n\n-   Carregue todos os pacotes que irá usar sempre no início do arquivo: Quando alguém abrir o seu código será fácil identificar quais são os pacotes que devem ser instalados e quais dependências podem existir.\n\n-   Evite referência de caminho que considere seu computador ou usuário: Faça referência ao caminho do projeto.\n\n# Criando um projeto:\n\nNo RStudio, para criar um projeto, clique no Menu `File,` deopis em `New Project...` . Na caixa de diálogo que aparecerá, clique em `New Directory` para criar o projeto em uma nova pasta ou `Existing Directory` para criar em uma pasta existente.\n\nCriando um projeto, o RStudio criará na pasta escolhida um arquivo `nome-do-projeto.Rproj`\n\n[**Exemplificando.....**]{.underline}\n\n# Atalhos no RStudio\n\n-   **CTRL+ENTER**: roda a(s) linha(s) selecionada(s) no script. O atalho mais utilizado.\n\n-   **ALT+-**: cria no script um sinal de atribuição (\\<-). Você o usará o tempo todo.\n\n-   **CTRL+SHIFT+M**: (%\\>%) operador *pipe*.\n\n-   **CTRL+1**: altera cursor para o script.\n\n-   **CTRL+2**: altera cursor para o console.\n\n-   **CTRL+ALT+I**: cria um chunk no R Markdown.\n\n-   **CTRL+SHIFT+K**: compila um arquivo no R Markdown.\n\n-   [**ALT+SHIFT+K**]{.underline}: janela com todos os atalhos disponíveis.\n\n# Tipos de dados\n\n-   **Numeric**: números que podem ser tanto inteiros quanto decimais. (5; 3.2; 6.8)\n\n-   **Integer**: Especificamente números inteiros.(1, 2, 7)\n\n-   **Character**: Representa textos ou cadeias de caracteres. (\"CONSTAT\", \"2\", \"UFES\")\n\n-   **Logical**: Representa valores booleanos, TRUE ou FALSE.\n\n# R como Calculadora\n\n**O R pode realizar operações matemáticas básicas**:\n\n```{r, echo=TRUE}\n#Soma\n2 + 2 \n\n#Subtração\n5 - 3 \n\n#Multiplicação\n3 * 3 \n\n#Divisão\n10 / 2 \n\n# potência\n4 ^ 2\n\n# resto da divisão de 5 por 3\n5 %% 3\n\n# parte inteira da divisão de 5 por 3\n5 %/% 3 \n```\n\n------------------------------------------------------------------------\n\n# Atribuição\n\n\"Guardar\" ítens e/ou valores em objetos\n\nPara criar um objeto, utilizamos o operador `<-` (Alt-)\n\n```{r, echo=TRUE}\n#Atribuição usando \"<-\"\nx <- 10\nx\n\n#Atribuição usando \"=\"\ny = 20\ny\n\n#Soma dos valores atribuídos\nx + y\n\n```\n\n**Atenção!**\n\nO R **diferencia letras maiúsculas e minúsculas**, isto é, `b` é considerado um objeto diferente de `B`\n\n------------------------------------------------------------------------\n\n## Objetos em R\n\nExistem cinco classes básicas no R:\n\n-   character: \"UAH!\"\n\n-   numeric: 0.95 (números reais)\n\n-   integer: 100515 (inteiros)\n\n-   complex: 2 + 5i (números complexos, a + bi)\n\n-   logical: TRUE (booleanos, TRUE/FALSE)\n\n## Exemplo\n\nVamos atribuir a x a string banana.\n\n```         \nx <- banana\n```\n\n```         \nErro: objeto 'banana' não encontrado\n```\n\n```         \nx <- \"banana\"\nx\n```\n\n```         \n[1] \"banana\"\n```\n\n# Função\n\nA sintaxe para usar uma função é a seguinte:\n\n```         \nnome_da_funcao(arg1, arg2, argn)\n```\n\nCada função tem sua própia sintaxe, para saber mais, basta usar o help\n\n## Função class()\n\n```{r, echo=TRUE}\ny <- \"ola\"\n\nclass(y)\n```\n\n```{r, echo=TRUE}\nx <- 2.5\n\nclass(x)\n```\n\n## Exemplo\n\n```{r, echo=TRUE}\nsum(1, 2) \n```\n\n```{r, echo=TRUE}\nnumeros <- c(10, 20, 30, 40) \n\nmean(numeros) \n\n```\n\n```{r, echo=TRUE}\nfrutas <- c(\"Maçã\", \"Banana\", \"Laranja\", \"Uva\")\n# Complete o código abaixo:\nqtd <- length(frutas)\nprint(qtd)\n\n```\n\n```{r, echo=TRUE}\nanimais <- c(\"Gato\", \"Cachorro\", \"Gato\", \"Passarinho\", \"Gato\", \"Cachorro\")\n# Complete o código:\nfrequencia <- table(animais)\nprint(frequencia)\n\n```\n\n# Classificação dos dados\n\n## **Numérico (numeric)**\n\n```{r, echo=TRUE}\nx <- 4.5 # O . é o separador decimal\nx\n\nclass(x)\nis.numeric(x) # Confere se o objeto é um da classe numeric\n\ny<-1E4 # Notação científica\ny\n\nclass(y)\n\nis.numeric(y) \n\n```\n\n## **Caracter (character)**\n\n```{r, echo=TRUE}\nx <- \"floresta\" # Sempre entre aspas \nx \nclass(x) \nis.character(x) \n\ny <- \"Diversidade (Simpson)\" # Pode conter espaços ou acentos \ny \nclass(y) \nis.character(y) \n```\n\n## **Lógico (logical)**\n\n```{r, echo=TRUE}\nx <- TRUE # Não precisa estar entre aspas, é uma palavra especial no R\nx\n\nclass(x)\n\nis.logical(x) # Confere se o objeto é um da classe logical\n\ny <- F # Pode ser abreviada\ny\n\nclass(y)\n\nis.logical(y)\n\n```\n\n# Atividade\n\nDiga por que esses códigos deram erro\n\n1\\)\n\n```         \nx <- \"Constat\"\n\nX\n```\n\n```         \nErro: objeto 'X' não encontrado \n```\n\n2\\)\n\n```         \nresultado <- sum(1, 2, \"3\")\n```\n\n```         \nError in sum(1, 2, \"3\") : 'type' inválido (character) do argumento\n```\n\n3\\) Atribua o ano em que nasceu e o ano atual a objetos e descubra sua idade;\n\n4\\) Escreva o código que resolva a equação y=3x + 5 para x=4 e depois altere o valor de x para sua idade.\n\n------------------------------------------------------------------------\n\n# Agradecimentos\n\nObrigado pela participação e nos vemos na próxima aula. não esqueça de nos seguir nas redes sociais.\n\n------------------------------------------------------------------------\n","srcMarkdownNoYaml":"\n\n# Apresentação da CONSTAT e curso R\n\n## CONSTAT\n\nSomos a Empresa Júnior do Curso de Graduação em Estatística da UFES, que tem como finalidade proporcionar a seus membros as condições necessárias para a aplicação prática de\n\nconhecimentos teóricos relativos ao curso de Estatística e a toda área de formação, promover uma vivência empresarial e desenvolver as habilidades empreendedoras dos estudantes, sob a missão de transformar dados em resultados.\n\n-   Contato: constatufes\\@gmail.com\n\n## Serviços prestados\n\n-   Engenharia de dados;\n\n-   Modelo de regressão preditivo;\n\n-   Censos de qualquer natureza;\n\n-   Pesquisa de mercado;\n\n-   Limpeza de dados;\n\n-   Análise descritiva;\n\n-   Planejamento amostral;\n\n-   Análise de regressão.\n\n------------------------------------------------------------------------\n\n## Curso R\n\n### Estrutura das aulas\n\n1.  Teoria;\n\n2.  Exercícios;\n\n3.  Dúvidas lista/ aula anterior.\n\n### Trabalho e certificado\n\nO certificado será liberado após a entrega do trabalho.\n\n**Trabalho**\n\nO trabalho consiste em entregar uma análise de um banco de dados usando os ítens aprendidos em aula.\n\n# Introdução ao R e ao RStudio\n\n-   **R**: Linguagem de programação focada em análise estatística e ciência de dados, além de um ambiente de software gratuito.\n\n-   Saiba mais em: [r-project.org](https://www.r-project.org/about.html)\n\n-   **RStudio**: Ambiente de desenvolvimento integrado (IDE) para R.\n\n-   O R, em combinação com o RStudio, possui um conjunto de funcionalidades cuja intenção é ajudar no processo de desenvolvimento\n\n-   **Recursos**: Scripts, pacotes, visualizações, Interface amigável para programadores e estatísticos.\n\n-   Saiba mais em: <https://rstudio.com/>\n\n------------------------------------------------------------------------\n\n## Utilização do RStudio\n\n-   Criação análises;\n\n-   Rmarkdown: Relatórios em PDF, HTML, Word;\n\n-   Quarto: Apresentações em PDF, HTML;\n\n-   Shiny: dashboard;\n\n-   Outros.\n\n## R\n\n![](images/Captura%20de%20tela%202024-12-03%20143747.png){fig-align=\"center\"}\n\n## RStudio\n\n![](images/Captura%20de%20tela%202024-12-03%20143909.png){fig-align=\"center\"}\n\n## Telas\n\n-   **Editor/Scripts**: É onde escrever os códigos. Arquivos do tipo .R.\n\n-   **Console**: Executar os comandos e ver os resultados.\n\n-   **Enviroment**: Painel com todos os objetos criados.\n\n-   **History**: História dos comandos executados.\n\n-   **Files**: Navegar em pastas e arquivos.\n\n-   **Plots**: Onde os gráficos serão apresentados.\n\n-   **Packages**: Pacotes instalados (sem ticar) e habilitados (ticados).\n\n-   **Help**: Retorna o tutorial de ajuda do comando solicitado com help() ou ?comando. Veremos melhor como pedir ajuda no R ainda nessa aula.\n\n## Back-end VS Front-end\n\n**Front-end** é a parte que os usuários veem e interagem, **back-end** é a parte que faz o programa funcionar\n\n```{r, echo=FALSE, out.width=\"45%\", fig.align='default'}\nlibrary(knitr)\ninclude_graphics(c(\"front_end.png\", \"back_end.png\"))\n```\n\n# Boas práticas\n\n-   Comente bem o seu código: É possível fazer comentários usando o símbolo ‘#’. É sempre bom explicar o que uma variável armazena, o que uma função faz, porque alguns parâmetros são passados para uma determinada função, qual é o objetivo de um trecho de código, etc.\n\n-   Evite linhas de código muito longas: Usar linhas de código mais curtas ajuda na leitura do código.\n\n-   Escreva um código organizado: Por exemplo, adote um padrão no uso de minúsculas e maiúsculas, uma lógica única na organização de pastas e arquivos, pode ser adotada uma breve descrição (como comentário) indicando o que um determinado script faz.\n\n-   Carregue todos os pacotes que irá usar sempre no início do arquivo: Quando alguém abrir o seu código será fácil identificar quais são os pacotes que devem ser instalados e quais dependências podem existir.\n\n-   Evite referência de caminho que considere seu computador ou usuário: Faça referência ao caminho do projeto.\n\n# Criando um projeto:\n\nNo RStudio, para criar um projeto, clique no Menu `File,` deopis em `New Project...` . Na caixa de diálogo que aparecerá, clique em `New Directory` para criar o projeto em uma nova pasta ou `Existing Directory` para criar em uma pasta existente.\n\nCriando um projeto, o RStudio criará na pasta escolhida um arquivo `nome-do-projeto.Rproj`\n\n[**Exemplificando.....**]{.underline}\n\n# Atalhos no RStudio\n\n-   **CTRL+ENTER**: roda a(s) linha(s) selecionada(s) no script. O atalho mais utilizado.\n\n-   **ALT+-**: cria no script um sinal de atribuição (\\<-). Você o usará o tempo todo.\n\n-   **CTRL+SHIFT+M**: (%\\>%) operador *pipe*.\n\n-   **CTRL+1**: altera cursor para o script.\n\n-   **CTRL+2**: altera cursor para o console.\n\n-   **CTRL+ALT+I**: cria um chunk no R Markdown.\n\n-   **CTRL+SHIFT+K**: compila um arquivo no R Markdown.\n\n-   [**ALT+SHIFT+K**]{.underline}: janela com todos os atalhos disponíveis.\n\n# Tipos de dados\n\n-   **Numeric**: números que podem ser tanto inteiros quanto decimais. (5; 3.2; 6.8)\n\n-   **Integer**: Especificamente números inteiros.(1, 2, 7)\n\n-   **Character**: Representa textos ou cadeias de caracteres. (\"CONSTAT\", \"2\", \"UFES\")\n\n-   **Logical**: Representa valores booleanos, TRUE ou FALSE.\n\n# R como Calculadora\n\n**O R pode realizar operações matemáticas básicas**:\n\n```{r, echo=TRUE}\n#Soma\n2 + 2 \n\n#Subtração\n5 - 3 \n\n#Multiplicação\n3 * 3 \n\n#Divisão\n10 / 2 \n\n# potência\n4 ^ 2\n\n# resto da divisão de 5 por 3\n5 %% 3\n\n# parte inteira da divisão de 5 por 3\n5 %/% 3 \n```\n\n------------------------------------------------------------------------\n\n# Atribuição\n\n\"Guardar\" ítens e/ou valores em objetos\n\nPara criar um objeto, utilizamos o operador `<-` (Alt-)\n\n```{r, echo=TRUE}\n#Atribuição usando \"<-\"\nx <- 10\nx\n\n#Atribuição usando \"=\"\ny = 20\ny\n\n#Soma dos valores atribuídos\nx + y\n\n```\n\n**Atenção!**\n\nO R **diferencia letras maiúsculas e minúsculas**, isto é, `b` é considerado um objeto diferente de `B`\n\n------------------------------------------------------------------------\n\n## Objetos em R\n\nExistem cinco classes básicas no R:\n\n-   character: \"UAH!\"\n\n-   numeric: 0.95 (números reais)\n\n-   integer: 100515 (inteiros)\n\n-   complex: 2 + 5i (números complexos, a + bi)\n\n-   logical: TRUE (booleanos, TRUE/FALSE)\n\n## Exemplo\n\nVamos atribuir a x a string banana.\n\n```         \nx <- banana\n```\n\n```         \nErro: objeto 'banana' não encontrado\n```\n\n```         \nx <- \"banana\"\nx\n```\n\n```         \n[1] \"banana\"\n```\n\n# Função\n\nA sintaxe para usar uma função é a seguinte:\n\n```         \nnome_da_funcao(arg1, arg2, argn)\n```\n\nCada função tem sua própia sintaxe, para saber mais, basta usar o help\n\n## Função class()\n\n```{r, echo=TRUE}\ny <- \"ola\"\n\nclass(y)\n```\n\n```{r, echo=TRUE}\nx <- 2.5\n\nclass(x)\n```\n\n## Exemplo\n\n```{r, echo=TRUE}\nsum(1, 2) \n```\n\n```{r, echo=TRUE}\nnumeros <- c(10, 20, 30, 40) \n\nmean(numeros) \n\n```\n\n```{r, echo=TRUE}\nfrutas <- c(\"Maçã\", \"Banana\", \"Laranja\", \"Uva\")\n# Complete o código abaixo:\nqtd <- length(frutas)\nprint(qtd)\n\n```\n\n```{r, echo=TRUE}\nanimais <- c(\"Gato\", \"Cachorro\", \"Gato\", \"Passarinho\", \"Gato\", \"Cachorro\")\n# Complete o código:\nfrequencia <- table(animais)\nprint(frequencia)\n\n```\n\n# Classificação dos dados\n\n## **Numérico (numeric)**\n\n```{r, echo=TRUE}\nx <- 4.5 # O . é o separador decimal\nx\n\nclass(x)\nis.numeric(x) # Confere se o objeto é um da classe numeric\n\ny<-1E4 # Notação científica\ny\n\nclass(y)\n\nis.numeric(y) \n\n```\n\n## **Caracter (character)**\n\n```{r, echo=TRUE}\nx <- \"floresta\" # Sempre entre aspas \nx \nclass(x) \nis.character(x) \n\ny <- \"Diversidade (Simpson)\" # Pode conter espaços ou acentos \ny \nclass(y) \nis.character(y) \n```\n\n## **Lógico (logical)**\n\n```{r, echo=TRUE}\nx <- TRUE # Não precisa estar entre aspas, é uma palavra especial no R\nx\n\nclass(x)\n\nis.logical(x) # Confere se o objeto é um da classe logical\n\ny <- F # Pode ser abreviada\ny\n\nclass(y)\n\nis.logical(y)\n\n```\n\n# Atividade\n\nDiga por que esses códigos deram erro\n\n1\\)\n\n```         \nx <- \"Constat\"\n\nX\n```\n\n```         \nErro: objeto 'X' não encontrado \n```\n\n2\\)\n\n```         \nresultado <- sum(1, 2, \"3\")\n```\n\n```         \nError in sum(1, 2, \"3\") : 'type' inválido (character) do argumento\n```\n\n3\\) Atribua o ano em que nasceu e o ano atual a objetos e descubra sua idade;\n\n4\\) Escreva o código que resolva a equação y=3x + 5 para x=4 e depois altere o valor de x para sua idade.\n\n------------------------------------------------------------------------\n\n# Agradecimentos\n\nObrigado pela participação e nos vemos na próxima aula. não esqueça de nos seguir nas redes sociais.\n\n------------------------------------------------------------------------\n"},"formats":{"revealjs":{"identifier":{"display-name":"RevealJS","target-format":"revealjs","base-format":"revealjs"},"execute":{"fig-width":10,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":false,"echo":false,"output":true,"warning":false,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"ipynb-shell-interactivity":null,"plotly-connected":true,"engine":"knitr"},"render":{"keep-tex":false,"keep-typ":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":"none","code-overflow":"scroll","code-link":false,"code-line-numbers":true,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-min-runs":1,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[]},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","html-math-method":{"method":"mathjax","url":"https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.0/MathJax.js?config=TeX-AMS_HTML-full"},"slide-level":2,"to":"revealjs","css":["styles.css"],"output-file":"Aula_1.html"},"language":{"toc-title-document":"Table of contents","toc-title-website":"On this page","related-formats-title":"Other Formats","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Source","other-links-title":"Other Links","code-links-title":"Code Links","launch-dev-container-title":"Launch Dev Container","launch-binder-title":"Launch Binder","article-notebook-label":"Article Notebook","notebook-preview-download":"Download Notebook","notebook-preview-download-src":"Download Source","notebook-preview-back":"Back to Article","manuscript-meca-bundle":"MECA Bundle","section-title-abstract":"Abstract","section-title-appendices":"Appendices","section-title-footnotes":"Footnotes","section-title-references":"References","section-title-reuse":"Reuse","section-title-copyright":"Copyright","section-title-citation":"Citation","appendix-attribution-cite-as":"For attribution, please cite this work as:","appendix-attribution-bibtex":"BibTeX citation:","appendix-view-license":"View License","title-block-author-single":"Author","title-block-author-plural":"Authors","title-block-affiliation-single":"Affiliation","title-block-affiliation-plural":"Affiliations","title-block-published":"Published","title-block-modified":"Modified","title-block-keywords":"Keywords","callout-tip-title":"Tip","callout-note-title":"Note","callout-warning-title":"Warning","callout-important-title":"Important","callout-caution-title":"Caution","code-summary":"Code","code-tools-menu-caption":"Code","code-tools-show-all-code":"Show All Code","code-tools-hide-all-code":"Hide All Code","code-tools-view-source":"View Source","code-tools-source-code":"Source Code","tools-share":"Share","tools-download":"Download","code-line":"Line","code-lines":"Lines","copy-button-tooltip":"Copy to Clipboard","copy-button-tooltip-success":"Copied!","repo-action-links-edit":"Edit this page","repo-action-links-source":"View source","repo-action-links-issue":"Report an issue","back-to-top":"Back to top","search-no-results-text":"No results","search-matching-documents-text":"matching documents","search-copy-link-title":"Copy link to search","search-hide-matches-text":"Hide additional matches","search-more-match-text":"more match in this document","search-more-matches-text":"more matches in this document","search-clear-button-title":"Clear","search-text-placeholder":"","search-detached-cancel-button-title":"Cancel","search-submit-button-title":"Submit","search-label":"Search","toggle-section":"Toggle section","toggle-sidebar":"Toggle sidebar navigation","toggle-dark-mode":"Toggle dark mode","toggle-reader-mode":"Toggle reader mode","toggle-navigation":"Toggle navigation","crossref-fig-title":"Figure","crossref-tbl-title":"Table","crossref-lst-title":"Listing","crossref-thm-title":"Theorem","crossref-lem-title":"Lemma","crossref-cor-title":"Corollary","crossref-prp-title":"Proposition","crossref-cnj-title":"Conjecture","crossref-def-title":"Definition","crossref-exm-title":"Example","crossref-exr-title":"Exercise","crossref-ch-prefix":"Chapter","crossref-apx-prefix":"Appendix","crossref-sec-prefix":"Section","crossref-eq-prefix":"Equation","crossref-lof-title":"List of Figures","crossref-lot-title":"List of Tables","crossref-lol-title":"List of Listings","environment-proof-title":"Proof","environment-remark-title":"Remark","environment-solution-title":"Solution","listing-page-order-by":"Order By","listing-page-order-by-default":"Default","listing-page-order-by-date-asc":"Oldest","listing-page-order-by-date-desc":"Newest","listing-page-order-by-number-desc":"High to Low","listing-page-order-by-number-asc":"Low to High","listing-page-field-date":"Date","listing-page-field-title":"Title","listing-page-field-description":"Description","listing-page-field-author":"Author","listing-page-field-filename":"File Name","listing-page-field-filemodified":"Modified","listing-page-field-subtitle":"Subtitle","listing-page-field-readingtime":"Reading Time","listing-page-field-wordcount":"Word Count","listing-page-field-categories":"Categories","listing-page-minutes-compact":"{0} min","listing-page-category-all":"All","listing-page-no-matches":"No matching items","listing-page-words":"{0} words","listing-page-filter":"Filter","draft":"Draft"},"metadata":{"lang":"en","fig-responsive":false,"quarto-version":"1.5.57","auto-stretch":true,"editor":"visual","title":"Aula 1 Mini curso R","author":" CONSTAT - Consultoria Estatítica","date":"2024-12-03","fontsize":"25px","transition":"slide","theme":"simple","background-image":"images/template.png","slide_number":true,"code_block_background":false}}},"projectFormats":["html"]}